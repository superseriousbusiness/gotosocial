// Code generated by astool. DO NOT EDIT.

package streams

import (
	typealbum "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_album"
	typeartist "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_artist"
	typelibrary "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_library"
	typetrack "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_track"
	vocab "code.superseriousbusiness.org/activity/streams/vocab"
)

// FunkwhaleAlbumIsExtendedBy returns true if the other's type extends from Album.
// Note that it returns false if the types are the same; see the "IsOrExtends"
// variant instead.
func FunkwhaleAlbumIsExtendedBy(other vocab.Type) bool {
	return typealbum.AlbumIsExtendedBy(other)
}

// FunkwhaleArtistIsExtendedBy returns true if the other's type extends from
// Artist. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func FunkwhaleArtistIsExtendedBy(other vocab.Type) bool {
	return typeartist.ArtistIsExtendedBy(other)
}

// FunkwhaleLibraryIsExtendedBy returns true if the other's type extends from
// Library. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func FunkwhaleLibraryIsExtendedBy(other vocab.Type) bool {
	return typelibrary.LibraryIsExtendedBy(other)
}

// FunkwhaleTrackIsExtendedBy returns true if the other's type extends from Track.
// Note that it returns false if the types are the same; see the "IsOrExtends"
// variant instead.
func FunkwhaleTrackIsExtendedBy(other vocab.Type) bool {
	return typetrack.TrackIsExtendedBy(other)
}
