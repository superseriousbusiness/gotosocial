// Code generated by astool. DO NOT EDIT.

package streams

import (
	typealbum "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_album"
	typeartist "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_artist"
	typelibrary "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_library"
	typetrack "code.superseriousbusiness.org/activity/streams/impl/funkwhale/type_track"
	vocab "code.superseriousbusiness.org/activity/streams/vocab"
)

// FunkwhaleFunkwhaleAlbumExtends returns true if Album extends from the other's
// type.
func FunkwhaleFunkwhaleAlbumExtends(other vocab.Type) bool {
	return typealbum.FunkwhaleAlbumExtends(other)
}

// FunkwhaleFunkwhaleArtistExtends returns true if Artist extends from the other's
// type.
func FunkwhaleFunkwhaleArtistExtends(other vocab.Type) bool {
	return typeartist.FunkwhaleArtistExtends(other)
}

// FunkwhaleFunkwhaleLibraryExtends returns true if Library extends from the
// other's type.
func FunkwhaleFunkwhaleLibraryExtends(other vocab.Type) bool {
	return typelibrary.FunkwhaleLibraryExtends(other)
}

// FunkwhaleFunkwhaleTrackExtends returns true if Track extends from the other's
// type.
func FunkwhaleFunkwhaleTrackExtends(other vocab.Type) bool {
	return typetrack.FunkwhaleTrackExtends(other)
}
