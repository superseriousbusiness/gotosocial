// Code generated by astool. DO NOT EDIT.

package streams

import (
	typeannounceapproval "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_announceapproval"
	typeannounceauthorization "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_announceauthorization"
	typeannouncerequest "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_announcerequest"
	typecanannounce "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canannounce"
	typecanlike "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canlike"
	typecanquote "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canquote"
	typecanreply "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canreply"
	typeinteractionpolicy "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_interactionpolicy"
	typelikeapproval "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_likeapproval"
	typelikeauthorization "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_likeauthorization"
	typelikerequest "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_likerequest"
	typereplyapproval "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_replyapproval"
	typereplyauthorization "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_replyauthorization"
	typereplyrequest "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_replyrequest"
	vocab "code.superseriousbusiness.org/activity/streams/vocab"
)

// IsOrExtendsGoToSocialAnnounceApproval returns true if the other provided type
// is the AnnounceApproval type or extends from the AnnounceApproval type.
func IsOrExtendsGoToSocialAnnounceApproval(other vocab.Type) bool {
	return typeannounceapproval.IsOrExtendsAnnounceApproval(other)
}

// IsOrExtendsGoToSocialAnnounceAuthorization returns true if the other provided
// type is the AnnounceAuthorization type or extends from the
// AnnounceAuthorization type.
func IsOrExtendsGoToSocialAnnounceAuthorization(other vocab.Type) bool {
	return typeannounceauthorization.IsOrExtendsAnnounceAuthorization(other)
}

// IsOrExtendsGoToSocialAnnounceRequest returns true if the other provided type is
// the AnnounceRequest type or extends from the AnnounceRequest type.
func IsOrExtendsGoToSocialAnnounceRequest(other vocab.Type) bool {
	return typeannouncerequest.IsOrExtendsAnnounceRequest(other)
}

// IsOrExtendsGoToSocialCanAnnounce returns true if the other provided type is the
// CanAnnounce type or extends from the CanAnnounce type.
func IsOrExtendsGoToSocialCanAnnounce(other vocab.Type) bool {
	return typecanannounce.IsOrExtendsCanAnnounce(other)
}

// IsOrExtendsGoToSocialCanLike returns true if the other provided type is the
// CanLike type or extends from the CanLike type.
func IsOrExtendsGoToSocialCanLike(other vocab.Type) bool {
	return typecanlike.IsOrExtendsCanLike(other)
}

// IsOrExtendsGoToSocialCanQuote returns true if the other provided type is the
// CanQuote type or extends from the CanQuote type.
func IsOrExtendsGoToSocialCanQuote(other vocab.Type) bool {
	return typecanquote.IsOrExtendsCanQuote(other)
}

// IsOrExtendsGoToSocialCanReply returns true if the other provided type is the
// CanReply type or extends from the CanReply type.
func IsOrExtendsGoToSocialCanReply(other vocab.Type) bool {
	return typecanreply.IsOrExtendsCanReply(other)
}

// IsOrExtendsGoToSocialInteractionPolicy returns true if the other provided type
// is the InteractionPolicy type or extends from the InteractionPolicy type.
func IsOrExtendsGoToSocialInteractionPolicy(other vocab.Type) bool {
	return typeinteractionpolicy.IsOrExtendsInteractionPolicy(other)
}

// IsOrExtendsGoToSocialLikeApproval returns true if the other provided type is
// the LikeApproval type or extends from the LikeApproval type.
func IsOrExtendsGoToSocialLikeApproval(other vocab.Type) bool {
	return typelikeapproval.IsOrExtendsLikeApproval(other)
}

// IsOrExtendsGoToSocialLikeAuthorization returns true if the other provided type
// is the LikeAuthorization type or extends from the LikeAuthorization type.
func IsOrExtendsGoToSocialLikeAuthorization(other vocab.Type) bool {
	return typelikeauthorization.IsOrExtendsLikeAuthorization(other)
}

// IsOrExtendsGoToSocialLikeRequest returns true if the other provided type is the
// LikeRequest type or extends from the LikeRequest type.
func IsOrExtendsGoToSocialLikeRequest(other vocab.Type) bool {
	return typelikerequest.IsOrExtendsLikeRequest(other)
}

// IsOrExtendsGoToSocialReplyApproval returns true if the other provided type is
// the ReplyApproval type or extends from the ReplyApproval type.
func IsOrExtendsGoToSocialReplyApproval(other vocab.Type) bool {
	return typereplyapproval.IsOrExtendsReplyApproval(other)
}

// IsOrExtendsGoToSocialReplyAuthorization returns true if the other provided type
// is the ReplyAuthorization type or extends from the ReplyAuthorization type.
func IsOrExtendsGoToSocialReplyAuthorization(other vocab.Type) bool {
	return typereplyauthorization.IsOrExtendsReplyAuthorization(other)
}

// IsOrExtendsGoToSocialReplyRequest returns true if the other provided type is
// the ReplyRequest type or extends from the ReplyRequest type.
func IsOrExtendsGoToSocialReplyRequest(other vocab.Type) bool {
	return typereplyrequest.IsOrExtendsReplyRequest(other)
}
