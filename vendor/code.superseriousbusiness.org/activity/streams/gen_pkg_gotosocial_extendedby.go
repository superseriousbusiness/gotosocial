// Code generated by astool. DO NOT EDIT.

package streams

import (
	typeannounceapproval "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_announceapproval"
	typeannounceauthorization "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_announceauthorization"
	typeannouncerequest "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_announcerequest"
	typecanannounce "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canannounce"
	typecanlike "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canlike"
	typecanquote "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canquote"
	typecanreply "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_canreply"
	typeinteractionpolicy "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_interactionpolicy"
	typelikeapproval "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_likeapproval"
	typelikeauthorization "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_likeauthorization"
	typelikerequest "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_likerequest"
	typereplyapproval "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_replyapproval"
	typereplyauthorization "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_replyauthorization"
	typereplyrequest "code.superseriousbusiness.org/activity/streams/impl/gotosocial/type_replyrequest"
	vocab "code.superseriousbusiness.org/activity/streams/vocab"
)

// GoToSocialAnnounceApprovalIsExtendedBy returns true if the other's type extends
// from AnnounceApproval. Note that it returns false if the types are the
// same; see the "IsOrExtends" variant instead.
func GoToSocialAnnounceApprovalIsExtendedBy(other vocab.Type) bool {
	return typeannounceapproval.AnnounceApprovalIsExtendedBy(other)
}

// GoToSocialAnnounceAuthorizationIsExtendedBy returns true if the other's type
// extends from AnnounceAuthorization. Note that it returns false if the types
// are the same; see the "IsOrExtends" variant instead.
func GoToSocialAnnounceAuthorizationIsExtendedBy(other vocab.Type) bool {
	return typeannounceauthorization.AnnounceAuthorizationIsExtendedBy(other)
}

// GoToSocialAnnounceRequestIsExtendedBy returns true if the other's type extends
// from AnnounceRequest. Note that it returns false if the types are the same;
// see the "IsOrExtends" variant instead.
func GoToSocialAnnounceRequestIsExtendedBy(other vocab.Type) bool {
	return typeannouncerequest.AnnounceRequestIsExtendedBy(other)
}

// GoToSocialCanAnnounceIsExtendedBy returns true if the other's type extends from
// CanAnnounce. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func GoToSocialCanAnnounceIsExtendedBy(other vocab.Type) bool {
	return typecanannounce.CanAnnounceIsExtendedBy(other)
}

// GoToSocialCanLikeIsExtendedBy returns true if the other's type extends from
// CanLike. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func GoToSocialCanLikeIsExtendedBy(other vocab.Type) bool {
	return typecanlike.CanLikeIsExtendedBy(other)
}

// GoToSocialCanQuoteIsExtendedBy returns true if the other's type extends from
// CanQuote. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func GoToSocialCanQuoteIsExtendedBy(other vocab.Type) bool {
	return typecanquote.CanQuoteIsExtendedBy(other)
}

// GoToSocialCanReplyIsExtendedBy returns true if the other's type extends from
// CanReply. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func GoToSocialCanReplyIsExtendedBy(other vocab.Type) bool {
	return typecanreply.CanReplyIsExtendedBy(other)
}

// GoToSocialInteractionPolicyIsExtendedBy returns true if the other's type
// extends from InteractionPolicy. Note that it returns false if the types are
// the same; see the "IsOrExtends" variant instead.
func GoToSocialInteractionPolicyIsExtendedBy(other vocab.Type) bool {
	return typeinteractionpolicy.InteractionPolicyIsExtendedBy(other)
}

// GoToSocialLikeApprovalIsExtendedBy returns true if the other's type extends
// from LikeApproval. Note that it returns false if the types are the same;
// see the "IsOrExtends" variant instead.
func GoToSocialLikeApprovalIsExtendedBy(other vocab.Type) bool {
	return typelikeapproval.LikeApprovalIsExtendedBy(other)
}

// GoToSocialLikeAuthorizationIsExtendedBy returns true if the other's type
// extends from LikeAuthorization. Note that it returns false if the types are
// the same; see the "IsOrExtends" variant instead.
func GoToSocialLikeAuthorizationIsExtendedBy(other vocab.Type) bool {
	return typelikeauthorization.LikeAuthorizationIsExtendedBy(other)
}

// GoToSocialLikeRequestIsExtendedBy returns true if the other's type extends from
// LikeRequest. Note that it returns false if the types are the same; see the
// "IsOrExtends" variant instead.
func GoToSocialLikeRequestIsExtendedBy(other vocab.Type) bool {
	return typelikerequest.LikeRequestIsExtendedBy(other)
}

// GoToSocialReplyApprovalIsExtendedBy returns true if the other's type extends
// from ReplyApproval. Note that it returns false if the types are the same;
// see the "IsOrExtends" variant instead.
func GoToSocialReplyApprovalIsExtendedBy(other vocab.Type) bool {
	return typereplyapproval.ReplyApprovalIsExtendedBy(other)
}

// GoToSocialReplyAuthorizationIsExtendedBy returns true if the other's type
// extends from ReplyAuthorization. Note that it returns false if the types
// are the same; see the "IsOrExtends" variant instead.
func GoToSocialReplyAuthorizationIsExtendedBy(other vocab.Type) bool {
	return typereplyauthorization.ReplyAuthorizationIsExtendedBy(other)
}

// GoToSocialReplyRequestIsExtendedBy returns true if the other's type extends
// from ReplyRequest. Note that it returns false if the types are the same;
// see the "IsOrExtends" variant instead.
func GoToSocialReplyRequestIsExtendedBy(other vocab.Type) bool {
	return typereplyrequest.ReplyRequestIsExtendedBy(other)
}
